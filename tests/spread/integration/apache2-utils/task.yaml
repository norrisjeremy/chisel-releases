summary: Integration tests for apache2-utils

execute: |
  # Installing apache2_bins to be able to do a benchmark test using ab util
  rootfs="$(install-slices apache2-utils_bins apache2-utils_scripts apache2_bins base-passwd_data)"

  test "$(chroot "${rootfs}/" htdbm -cb test.htdbm user1 password123)" = \
    "Database test.htdbm created."
  test "$(chroot "${rootfs}/" htpasswd -cb test.htpasswd user1 passwd123 2>&1)" = \
    "Adding password for user user1"
  test "$(chroot "${rootfs}/"  htpasswd -vb test.htpasswd user1 passwd123 2>&1)" = \
    "Password for user user1 correct."
  echo "192.168.1.1 - - [26/Feb/2025:10:00:00 +0000] \"GET /index.html HTTP/1.1\" 200 1024" \
    > "${rootfs}/test.log"
  awk '{print $1}' "${rootfs}/test.log" | chroot "${rootfs}/" logresolve > "${rootfs}/resolved.log"
  test "$(cat "${rootfs}/resolved.log")" = "192.168.1.1"
  mkdir -p "${rootfs}/dev"
  mount --rbind /dev "${rootfs}/dev"
  mkdir -p "${rootfs}/var/run/apache2"
  chown www-data:www-data "${rootfs}/var/run/apache2"
  chmod 755 "${rootfs}/var/run/apache2"
  echo "127.0.0.1 localhost" > "${rootfs}/etc/hosts"

  cat <<'EOF' > "${rootfs}/etc/apache2/apache2.conf"
  ServerRoot "/etc/apache2"
  ServerName localhost
  DefaultRuntimeDir /var/run/apache2
  PidFile /var/run/apache2/apache2.pid
  ErrorLog /var/log/apache2/error.log
  Listen 8080
  LoadModule mpm_event_module /usr/lib/apache2/modules/mod_mpm_event.so
  LoadModule authz_core_module /usr/lib/apache2/modules/mod_authz_core.so
  LoadModule dir_module /usr/lib/apache2/modules/mod_dir.so
  ErrorLog /var/log/apache2/error.log
  User www-data
  Group www-data
  DocumentRoot "/var/www/html"
  <Directory "/var/www/html">
      Options Indexes FollowSymLinks
      AllowOverride None
      Require all granted
  </Directory>
  EOF
  cat "${rootfs}/etc/apache2/apache2.conf"
  if [ -d "${rootfs}/var/run/apache2" ]; then
  echo "Apache runtime dir exists inside chroot"
  else
    echo 'Missing: create it with mkdir -p "${rootfs}/var/run/apache2"'
  fi

  chroot "${rootfs}" apache2 -X -e debug
  test "$(chroot "${rootfs}" ab -n 1 -c 1 http://localhost:8080/index.html 2>/dev/null | \
  grep -o "Requests per second")" = "Requests per second"
  test "$(id -g | chroot "${rootfs}/" checkgid 2>/dev/null && echo "valid")" = "valid"
  test "$(chroot "${rootfs}/" fcgistarter 2>&1 | grep -o 'usage')" = "usage"
  cat <<'EOF' > /tmp/fake-fcgi.sh
  #!/bin/bash
  while true; do echo "Fake FastCGI Running"; sleep 5; done
  EOF
  chmod +x /tmp/fake-fcgi.sh
  chroot "${rootfs}/" fcgistarter -c ../tmp/fake-fcgi.sh -p 9000
  test "$(ps aux | grep -o fake-fcgi.sh)" = "fake-fcgi.sh"
  chroot "${rootfs}/" htcacheclean -n -v -p var/cache/apache2 -l 100M
  test "$(chroot "${rootfs}/" htcacheclean -n -v -p var/cache/apache2 -l 100M 2>&1 | \
  grep -o "Cleaned")" = "Cleaned"
